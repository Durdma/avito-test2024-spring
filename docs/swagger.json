{
    "swagger": "2.0",
    "info": {
        "description": "API для управления баннерами",
        "title": "Avito Banners API",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/api/v1",
    "paths": {
        "/banner": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Этот эндпоинт предназначен для получения всех баннеров с возможностью фильтрации по идентификатору фичи и/или тега.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "banner"
                ],
                "summary": "Получение всех баннеров c фильтрацией по фиче и/или тегу",
                "operationId": "get-banners",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token for authentication",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Идентификатор фичи",
                        "name": "feature_id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Идентификатор тега",
                        "name": "tag_id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Лимит",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Оффсет",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.AdminBanner"
                            }
                        }
                    },
                    "401": {
                        "description": "Пользователь не авторизован",
                        "schema": {
                            "$ref": "#/definitions/httpv1.errorResponse"
                        }
                    },
                    "403": {
                        "description": "Пользователь не имеет доступа",
                        "schema": {
                            "$ref": "#/definitions/httpv1.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/httpv1.errorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "This endpoint allows an admin to create a new banner.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "banner"
                ],
                "summary": "Creates a new banner.",
                "operationId": "create-banner",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token for authentication",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Banner creation request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/httpv1.bannersAddInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Banner created successfully",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    "400": {
                        "description": "Invalid data provided",
                        "schema": {
                            "$ref": "#/definitions/httpv1.errorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized access",
                        "schema": {
                            "$ref": "#/definitions/httpv1.errorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden access",
                        "schema": {
                            "$ref": "#/definitions/httpv1.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/httpv1.errorResponse"
                        }
                    }
                }
            }
        },
        "/banner/{id}": {
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Этот эндпоинт предназначен для удаления баннера по его идентификатору.",
                "tags": [
                    "banner"
                ],
                "summary": "Удаление баннера по идентификатору",
                "operationId": "delete-banner",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token for authentication",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Идентификатор баннера",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Баннер успешно удален",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Некорректные данные",
                        "schema": {
                            "$ref": "#/definitions/httpv1.errorResponse"
                        }
                    },
                    "401": {
                        "description": "Пользователь не авторизован",
                        "schema": {
                            "$ref": "#/definitions/httpv1.errorResponse"
                        }
                    },
                    "403": {
                        "description": "Пользователь не имеет доступа",
                        "schema": {
                            "$ref": "#/definitions/httpv1.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Баннер для тэга не найден",
                        "schema": {
                            "$ref": "#/definitions/httpv1.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/httpv1.errorResponse"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Этот эндпоинт предназначен для обновления содержимого баннера по его идентификатору.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "banner"
                ],
                "summary": "Обновление содержимого баннера",
                "operationId": "update-banner",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token for authentication",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Идентификатор баннера",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Запрос на обновление баннера",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/service.bannersUpdateInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Некорректные данные",
                        "schema": {
                            "$ref": "#/definitions/httpv1.errorResponse"
                        }
                    },
                    "401": {
                        "description": "Пользователь не авторизован",
                        "schema": {
                            "$ref": "#/definitions/httpv1.errorResponse"
                        }
                    },
                    "403": {
                        "description": "Пользователь не имеет доступа",
                        "schema": {
                            "$ref": "#/definitions/httpv1.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Баннер не найден",
                        "schema": {
                            "$ref": "#/definitions/httpv1.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/httpv1.errorResponse"
                        }
                    }
                }
            }
        },
        "/features": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Получение всех фич",
                "tags": [
                    "feature"
                ],
                "summary": "Получение всех фич",
                "operationId": "get-features",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token for authentication",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Лимит",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Оффсет",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Feature"
                            }
                        }
                    },
                    "401": {
                        "description": "Пользователь не авторизован",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "Пользователь не имеет доступа",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Создание новой фичи",
                "tags": [
                    "feature"
                ],
                "summary": "Creates a new feature",
                "operationId": "create-feature",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token for authentication",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Фича успешно создана",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    "401": {
                        "description": "Пользователь не авторизован",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "Пользователь не имеет доступа",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/httpv1.errorResponse"
                        }
                    }
                }
            }
        },
        "/features/{id}": {
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Удаление фичи",
                "tags": [
                    "feature"
                ],
                "summary": "Deletes a feature",
                "operationId": "delete-feature",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token for authentication",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Идентификатор фичи",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Фича успешно удален",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Некорректные данные",
                        "schema": {
                            "$ref": "#/definitions/httpv1.errorResponse"
                        }
                    },
                    "401": {
                        "description": "Пользователь не авторизован",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "Пользователь не имеет доступа",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/httpv1.errorResponse"
                        }
                    }
                }
            }
        },
        "/tags": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Получение всех тэгов",
                "tags": [
                    "tag"
                ],
                "summary": "Получение всех тэгов",
                "operationId": "get-tags",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token for authentication",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Лимит",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Оффсет",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Tag"
                            }
                        }
                    },
                    "401": {
                        "description": "Пользователь не авторизован",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "Пользователь не имеет доступа",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Создание нового тэга",
                "tags": [
                    "tag"
                ],
                "summary": "Creates a new tag",
                "operationId": "create-tag",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token for authentication",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Тэг успешно создан",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    "401": {
                        "description": "Пользователь не авторизован",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "Пользователь не имеет доступа",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/httpv1.errorResponse"
                        }
                    }
                }
            }
        },
        "/tags/{id}": {
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Удаление тэга",
                "tags": [
                    "tag"
                ],
                "summary": "Deletes a tag",
                "operationId": "delete-tag",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token for authentication",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Идентификатор тэга",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Тэг успешно удален",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Некорректные данные",
                        "schema": {
                            "$ref": "#/definitions/httpv1.errorResponse"
                        }
                    },
                    "401": {
                        "description": "Пользователь не авторизован",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "Пользователь не имеет доступа",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/httpv1.errorResponse"
                        }
                    }
                }
            }
        },
        "/user_banner": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "This endpoint allows a user to get a banner based on their tag and feature ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "banner"
                ],
                "summary": "Получение баннера для пользователя",
                "operationId": "get-user-banner",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token for authentication",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "User tag",
                        "name": "tag_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Feature ID",
                        "name": "feature_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "default": false,
                        "description": "Get the latest information",
                        "name": "use_last_revision",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User banner",
                        "schema": {
                            "$ref": "#/definitions/models.Banner"
                        }
                    },
                    "400": {
                        "description": "Invalid data provided",
                        "schema": {
                            "$ref": "#/definitions/httpv1.errorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized access",
                        "schema": {
                            "$ref": "#/definitions/httpv1.errorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden access",
                        "schema": {
                            "$ref": "#/definitions/httpv1.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Banner not found",
                        "schema": {
                            "$ref": "#/definitions/httpv1.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/httpv1.errorResponse"
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "description": "Этот эндпоинт предназначен для получения всех пользователей с фильтрацией по тегу",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Получение всех пользователей с фильтрацией по тегу",
                "operationId": "get-users",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Идентификатор тега",
                        "name": "tag_id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Лимит",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Оффсет",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.User"
                            }
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Создание нового пользователя",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Creates a new user",
                "operationId": "create-user",
                "parameters": [
                    {
                        "description": "User creation request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/httpv1.UserInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Пользователь успешно создан",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid data provided",
                        "schema": {
                            "$ref": "#/definitions/httpv1.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/httpv1.errorResponse"
                        }
                    }
                }
            }
        },
        "/users/{id}": {
            "get": {
                "description": "Этот эндпоинт предназначен для получения пользователя по его идентификатору.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Получение пользователя по идентификатору",
                "operationId": "get-user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Идентификатор пользователя",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "400": {
                        "description": "Некорректные данные",
                        "schema": {
                            "$ref": "#/definitions/httpv1.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Пользователь не найден",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/httpv1.errorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Этот эндпоинт предназначен для удаления пользователя по его идентификатору.",
                "tags": [
                    "user"
                ],
                "summary": "Удаление пользователя по идентификатору",
                "operationId": "delete-user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Идентификатор пользователя",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Пользователь успешно удален",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Пользователь не найден",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/httpv1.errorResponse"
                        }
                    }
                }
            },
            "patch": {
                "description": "Этот эндпоинт предназначен для обновления пользователя по его идентификатору.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Обновление пользователя",
                "operationId": "update-user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Идентификатор пользователя",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Запрос на обновление пользователя",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/httpv1.UserInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Некорректные данные",
                        "schema": {
                            "$ref": "#/definitions/httpv1.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Пользователь не найден",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/httpv1.errorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "httpv1.UserInput": {
            "type": "object",
            "required": [
                "is_admin"
            ],
            "properties": {
                "is_admin": {
                    "type": "boolean"
                },
                "tag_id": {
                    "type": "integer"
                }
            }
        },
        "httpv1.bannersAddContent": {
            "type": "object",
            "required": [
                "text",
                "title",
                "url"
            ],
            "properties": {
                "text": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "httpv1.bannersAddInput": {
            "type": "object",
            "required": [
                "content",
                "feature_id",
                "is_active",
                "tags_ids"
            ],
            "properties": {
                "content": {
                    "$ref": "#/definitions/httpv1.bannersAddContent"
                },
                "feature_id": {
                    "type": "integer"
                },
                "is_active": {
                    "type": "boolean"
                },
                "tags_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "httpv1.errorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "models.AdminBanner": {
            "type": "object",
            "properties": {
                "banner_id": {
                    "type": "integer"
                },
                "content": {
                    "$ref": "#/definitions/models.Banner"
                },
                "created_at": {
                    "type": "string"
                },
                "feature_id": {
                    "$ref": "#/definitions/models.Feature"
                },
                "is_active": {
                    "type": "boolean"
                },
                "tags_ids": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Tag"
                    }
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.Banner": {
            "type": "object",
            "properties": {
                "text": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "models.Feature": {
            "type": "object",
            "properties": {
                "feature_id": {
                    "type": "integer"
                }
            }
        },
        "models.Tag": {
            "type": "object",
            "properties": {
                "tag_id": {
                    "type": "integer"
                }
            }
        },
        "models.User": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "is_admin": {
                    "type": "boolean"
                },
                "tag_id": {
                    "type": "integer"
                }
            }
        },
        "service.bannersUpdateContent": {
            "type": "object",
            "properties": {
                "text": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "service.bannersUpdateInput": {
            "type": "object",
            "properties": {
                "content": {
                    "$ref": "#/definitions/service.bannersUpdateContent"
                },
                "feature_id": {
                    "type": "integer"
                },
                "is_active": {
                    "type": "boolean"
                },
                "tags_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        }
    }
}